import { create } from 'zustand'
import { persist } from 'zustand/middleware'
import { supabase } from '../lib/supabase'

const useAppStore = create(
  persist(
    (set, get) => ({
      // Estado de autentica√ß√£o
      user: null,
      isAuthenticated: false,
      isLoading: true,

      // Estado da crian√ßa/perfil
      child: null,
      childDevelopment: {
        // Dados de desenvolvimento da crian√ßa
        cognitive: { progress: 0, activities: [], lastUpdated: null },
        motor: { progress: 0, activities: [], lastUpdated: null },
        social: { progress: 0, activities: [], lastUpdated: null },
        emotional: { progress: 0, activities: [], lastUpdated: null },
        
        // H√°bitos e metas
        habits: {
          reading: { streak: 0, goal: 30, lastActivity: null },
          exercise: { streak: 0, goal: 7, lastActivity: null },
          creativity: { hours: 0, goal: 25, lastActivity: null },
          sleep: { streak: 0, goal: 7, lastActivity: null }
        },
        
        // Conquistas
        achievements: [],
        
        // Estat√≠sticas gerais
        totalPoints: 0,
        level: 1,
        weeklyGoal: 5,
        completedThisWeek: 0,
        currentStreak: 0
      },
      
      // Brincadeiras e dados
      activities: [],
      favorites: [],
      cartoons: [],
      
      // Cache offline
      cachedData: {
        activities: [],
        cartoons: [],
        lastUpdated: null
      },

      // Actions de autentica√ß√£o
      setUser: (user) => {
        console.log('üë§ SETUSER CHAMADO:', {
          user: !!user,
          userEmail: user?.email,
          userID: user?.id,
          willBeAuthenticated: !!user
        })
        set({ user, isAuthenticated: !!user })
      },
      
      setLoading: (isLoading) => set({ isLoading }),
      
      logout: async () => {
        if (supabase) {
          await supabase.auth.signOut()
        }
        set({ 
          user: null, 
          isAuthenticated: false,
          child: null,
          favorites: []
        })
      },

      // Actions do perfil da crian√ßa
      setChild: (childData) => {
        console.log('üë∂ SETCHILD CHAMADO:', {
          child: !!childData,
          childName: childData?.name,
          childAge: childData?.age,
          childID: childData?.id
        })
        set({ child: childData })
      },
      
      // Actions de desenvolvimento da crian√ßa
      updateChildDevelopment: (developmentData) => {
        const current = get().childDevelopment
        const updated = { ...current, ...developmentData }
        set({ childDevelopment: updated })
        
        // Salvar no localStorage para persist√™ncia
        localStorage.setItem('brincafacil-child-development', JSON.stringify(updated))
      },
      
      // Registrar atividade de desenvolvimento
      recordDevelopmentActivity: (area, activity, points = 10) => {
        const current = get().childDevelopment
        const now = new Date().toISOString()
        
        // Atualizar progresso da √°rea
        const areaData = current[area]
        if (areaData) {
          areaData.progress = Math.min(100, areaData.progress + points)
          areaData.activities.push({
            name: activity,
            points,
            date: now
          })
          areaData.lastUpdated = now
        }
        
        // Atualizar pontos totais e n√≠vel
        const newTotalPoints = current.totalPoints + points
        const newLevel = Math.floor(newTotalPoints / 100) + 1
        
        // Atualizar meta semanal
        const newCompletedThisWeek = current.completedThisWeek + 1
        
        // Atualizar sequ√™ncia atual
        const newCurrentStreak = current.currentStreak + 1
        
        const updated = {
          ...current,
          [area]: areaData,
          totalPoints: newTotalPoints,
          level: newLevel,
          completedThisWeek: newCompletedThisWeek,
          currentStreak: newCurrentStreak
        }
        
        set({ childDevelopment: updated })
        
        // Salvar no localStorage
        localStorage.setItem('brincafacil-child-development', JSON.stringify(updated))
        
        return updated
      },

      // Registrar atividade detalhada com foto e avalia√ß√£o
      recordDetailedActivity: (area, activityData) => {
        const current = get().childDevelopment
        const now = new Date().toISOString()
        
        // Atualizar progresso da √°rea
        const areaData = current[area]
        if (areaData) {
          areaData.progress = Math.min(100, areaData.progress + activityData.points)
          areaData.activities.push({
            id: `activity_${Date.now()}`,
            name: activityData.name,
            description: activityData.description,
            rating: activityData.rating,
            photo: activityData.photo,
            duration: activityData.duration,
            difficulty: activityData.difficulty,
            funLevel: activityData.funLevel,
            points: activityData.points,
            date: now,
            completed: true,
            area: area // Adicionar √°rea para refer√™ncia
          })
          areaData.lastUpdated = now
        }
        
        // Atualizar pontos totais e n√≠vel
        const newTotalPoints = current.totalPoints + activityData.points
        const newLevel = Math.floor(newTotalPoints / 100) + 1
        
        // Atualizar meta semanal
        const newCompletedThisWeek = current.completedThisWeek + 1
        
        // Atualizar sequ√™ncia atual
        const newCurrentStreak = current.currentStreak + 1
        
        const updated = {
          ...current,
          [area]: areaData,
          totalPoints: newTotalPoints,
          level: newLevel,
          completedThisWeek: newCompletedThisWeek,
          currentStreak: newCurrentStreak
        }
        
        set({ childDevelopment: updated })
        
        // Salvar no localStorage
        localStorage.setItem('brincafacil-child-development', JSON.stringify(updated))
        
        return updated
      },

      // Registrar atividade de brincadeira espec√≠fica
      recordActivityFromCard: (activityId, area, activityData) => {
        const current = get().childDevelopment
        const now = new Date().toISOString()
        
        // Calcular pontos baseados na avalia√ß√£o da crian√ßa
        let points = 10 // Base
        
        // B√¥nus por nota alta
        if (activityData.rating >= 4) points += 5
        if (activityData.rating === 5) points += 5
        
        // B√¥nus por coment√°rio/descri√ß√£o longa
        if ((activityData.comment || activityData.description || '').length > 20) points += 3
        
        // B√¥nus por foto
        if (activityData.photo) points += 2
        
        // B√¥nus por dura√ß√£o (brincar mais tempo = mais pontos)
        if (activityData.duration >= 30) points += 2
        if (activityData.duration >= 60) points += 3
        
        // B√¥nus por dificuldade (atividades dif√≠ceis valem mais)
        if (activityData.difficulty === 'hard') points += 3
        else if (activityData.difficulty === 'medium') points += 1
        
        // B√¥nus por divers√£o (se achou muito legal)
        if (activityData.funLevel === 'fun') points += 2
        
        const finalPoints = points
        
        // Atualizar progresso da √°rea espec√≠fica
        const areaData = current[area]
        if (areaData) {
          areaData.progress = Math.min(100, areaData.progress + finalPoints)
          areaData.activities.push({
            id: `activity_${Date.now()}`,
            name: activityData.name,
            description: activityData.description,
            rating: activityData.rating,
            photo: activityData.photo,
            duration: activityData.duration,
            difficulty: activityData.difficulty,
            funLevel: activityData.funLevel,
            points: finalPoints,
            date: now,
            completed: true,
            area: area,
            activityId: activityId // Refer√™ncia √† brincadeira original
          })
          areaData.lastUpdated = now
        }
        
        // Atualizar pontos totais e n√≠vel
        const newTotalPoints = current.totalPoints + finalPoints
        const newLevel = Math.floor(newTotalPoints / 100) + 1
        
        // Atualizar meta semanal
        const newCompletedThisWeek = current.completedThisWeek + 1
        
        // Atualizar sequ√™ncia atual
        const newCurrentStreak = current.currentStreak + 1
        
        const updated = {
          ...current,
          [area]: areaData,
          totalPoints: newTotalPoints,
          level: newLevel,
          completedThisWeek: newCompletedThisWeek,
          currentStreak: newCurrentStreak
        }
        
        set({ childDevelopment: updated })
        
        // Salvar no localStorage
        localStorage.setItem('brincafacil-child-development', JSON.stringify(updated))
        
        return {
          updated,
          points: finalPoints,
          area: area,
          newLevel: newLevel
        }
      },
      
      // Registrar h√°bito di√°rio
      recordDailyHabit: (habitType, value = 1) => {
        const current = get().childDevelopment
        const now = new Date().toISOString()
        const today = new Date().toDateString()
        
        const habit = current.habits[habitType]
        if (habit) {
          // Verificar se j√° foi registrado hoje
          const lastActivity = habit.lastActivity ? new Date(habit.lastActivity).toDateString() : null
          
          if (lastActivity !== today) {
            // Novo dia - incrementar sequ√™ncia
            habit.streak += value
            habit.lastActivity = now
            
            // Para h√°bitos espec√≠ficos, ajustar valores
            if (habitType === 'creativity') {
              habit.hours += value
            }
            
            // Verificar se atingiu a meta
            if (habit.streak >= habit.goal) {
              // Desbloquear conquista
              const achievement = {
                id: `${habitType}_goal_${Date.now()}`,
                type: habitType,
                title: `Meta de ${habitType === 'reading' ? 'Leitura' : habitType === 'exercise' ? 'Exerc√≠cio' : habitType === 'creativity' ? 'Criatividade' : 'Sono'} Atingida!`,
                description: `Parab√©ns por atingir sua meta de ${habit.goal}!`,
                unlocked: true,
                points: 50,
                date: now
              }
              
              current.achievements.push(achievement)
            }
          }
        }
        
        set({ childDevelopment: current })
        localStorage.setItem('brincafacil-child-development', JSON.stringify(current))
        
        return current
      },
      
      // Carregar dados de desenvolvimento salvos
      loadChildDevelopment: () => {
        try {
          const saved = localStorage.getItem('brincafacil-child-development')
          if (saved) {
            const parsed = JSON.parse(saved)
            set({ childDevelopment: parsed })
            return parsed
          }
        } catch (error) {
          console.error('Erro ao carregar dados de desenvolvimento:', error)
        }
        return null
      },
      
      // Resetar dados semanais (chamado no in√≠cio da semana)
      resetWeeklyData: () => {
        const current = get().childDevelopment
        const updated = {
          ...current,
          completedThisWeek: 0,
          weeklyGoal: 5
        }
        
        set({ childDevelopment: updated })
        localStorage.setItem('brincafacil-child-development', JSON.stringify(updated))
        
        return updated
      },
      
      updateChild: async (childData) => {
        const { user } = get()
        if (!user) return { error: 'Usu√°rio n√£o autenticado' }
        
        if (!supabase) {
          // Modo demonstra√ß√£o - salvar localmente
          console.warn('Supabase n√£o configurado - salvando localmente')
          const childWithId = { 
            ...childData, 
            id: 'demo-child-' + Date.now(),
            user_id: user.id,
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
          }
          set({ child: childWithId })
          return { data: childWithId, error: null }
        }
        
        try {
          const { data, error } = await supabase
            .from('children_profiles')
            .upsert({
              user_id: user.id,
              ...childData,
              updated_at: new Date().toISOString()
            })
            .select()
            .single()
          
          if (error) throw error
          
          set({ child: data })
          return { data, error: null }
        } catch (error) {
          console.error('Erro ao atualizar perfil da crian√ßa:', error)
          return { data: null, error }
        }
      },

      // Actions de brincadeiras
      setActivities: (activities) => set({ activities }),
      
      loadActivities: async () => {
        if (!supabase) {
          // LIMPEZA AGRESSIVA DO CACHE
          localStorage.clear()
          console.log('üßπ CACHE LIMPO COMPLETAMENTE')
          
          // For√ßar atualiza√ß√£o do estado
          console.log('üîÑ FOR√áANDO ATUALIZA√á√ÉO DAS ATIVIDADES')
          
          
          // Atividades dispon√≠veis - incluindo as novas premium
          const demoActivities = [
            {
              id: 1,
              title: 'Pega Peixinhos',
              description: 'Uma brincadeira divertida onde as crian√ßas usam uma vara com bola para pescar peixinhos de papel. Desenvolve coordena√ß√£o motora, no√ß√£o espacial e paci√™ncia.',
              instructions: [
                'Fa√ßa um c√≠rculo no ch√£o com fita adesiva ou giz',
                'Corte v√°rios peixinhos de papel colorido e coloque dentro do c√≠rculo',
                'Prepare varas com fita adesiva e uma bola pequena na ponta',
                'Cada crian√ßa deve usar sua vara para "pescar" os peixinhos',
                'Coloque os peixes pescados em baldes ou caixas correspondentes √†s cores',
                'Quem conseguir encher seu balde com peixes da sua cor primeiro, ganha!'
              ],
              materials: [
                'Papel colorido (v√°rias cores)',
                'Tesoura',
                'Fita adesiva ou giz para fazer o c√≠rculo',
                'Cabos ou varinhas (podem ser de vassoura ou galhos)',
                'Bolas pequenas (ping pong ou similar)',
                'Barbante ou fita',
                'Baldes ou caixas pequenas para cada cor'
              ],
              categories: ['coordena√ß√£o', 'competi√ß√£o', 'social', 'motor'],
              duration: 20,
              participants: '2-4',
              difficulty: 'medium',
              min_age: 4,
              max_age: 10,
              rating: 4.8,
              safety_tips: [
                'Supervisione o uso das varas para evitar acidentes',
                'Certifique-se de que o espa√ßo esteja livre de obst√°culos',
                'Use bolas leves para evitar machucados',
                'Mantenha as crian√ßas organizadas em turnos se necess√°rio'
              ],
              variations: [
                'Vers√£o individual: uma crian√ßa tenta pescar todos os peixes em um tempo determinado',
                'Vers√£o cooperativa: todas as crian√ßas trabalham juntas para pescar todos os peixes',
                'Vers√£o com pontua√ß√£o: peixes de cores diferentes valem pontos diferentes',
                'Vers√£o tem√°tica: use formas diferentes (estrelas, cora√ß√µes, etc.)'
              ],
              image_url: '/Brincadeiras/pegapeixinhos.png',
              video_url: 'https://www.youtube.com/watch?v=rbB9fKQXbdY&list=PLEALKINltswSwzAJWtaIv1vzqs2r1t4z6',
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 2,
              title: 'Espelho dos Desenhos',
              description: 'Um desafio de mem√≥ria visual onde as crian√ßas devem reproduzir um padr√£o de desenhos observado rapidamente. Desenvolve mem√≥ria visual, concentra√ß√£o e capacidade de observa√ß√£o.',
              instructions: [
                'Posicione uma cadeira na frente e um quadro ou parede atr√°s',
                'Desenhe uma grade 3x3 em papel e coloque desenhos diferentes em cada quadrado',
                'Cole este papel na cadeira (modelo de refer√™ncia)',
                'Desenhe uma grade 3x3 vazia no quadro da parede',
                'A primeira crian√ßa olha rapidamente para o modelo na cadeira (m√°ximo 10 segundos)',
                'Depois vai at√© o quadro e tenta reproduzir os desenhos nos lugares corretos',
                'A segunda crian√ßa faz o mesmo processo',
                'Quem conseguir reproduzir mais desenhos corretos nos lugares certos vence!'
              ],
              materials: [
                'Uma cadeira',
                'Quadro, lousa ou parede lisa',
                'Papel sulfite ou cartolina',
                'L√°pis ou canetinhas coloridas',
                'Fita adesiva ou √≠m√£s para fixar',
                'Cron√¥metro ou rel√≥gio',
                'Borracha (para corre√ß√µes no quadro)'
              ],
              categories: ['mem√≥ria', 'observa√ß√£o', 'competi√ß√£o', 'cognitivo'],
              duration: 15,
              participants: '2',
              difficulty: 'hard',
              min_age: 7,
              max_age: 12,
              rating: 4.7,
              safety_tips: [
                'Certifique-se de que a cadeira esteja est√°vel',
                'Mantenha o espa√ßo entre cadeira e quadro livre de obst√°culos',
                'Use materiais de desenho seguros e n√£o t√≥xicos',
                'Supervise o tempo de observa√ß√£o para manter a competi√ß√£o justa'
              ],
              variations: [
                'Vers√£o cooperativa: trabalham juntas para completar o desenho',
                'Vers√£o com n√≠veis: comece com 2x2 e aumente para 4x4',
                'Vers√£o tem√°tica: use apenas formas geom√©tricas ou apenas animais',
                'Vers√£o com tempo: complete o maior n√∫mero de quadrados em 2 minutos',
                'Vers√£o com cores: adicione a cor correta de cada desenho como desafio extra'
              ],
              image_url: '/Brincadeiras/espelhodosdesenhos.png',
              video_url: 'https://youtube.com/shorts/y9ipm-HYo3c?feature=share',
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 3,
              title: 'Torre das Vogais',
              description: 'Brincadeira educativa com rolos e tampinhas coloridas para aprender as vogais de forma divertida e desenvolver coordena√ß√£o motora',
              image_url: '/Brincadeiras/torresdasvogais.png',
              video_url: 'https://youtube.com/shorts/TegpRnP0dKc?feature=share',
              instructions: [
                'Envolva cada rolo com papel adesivo de cor diferente',
                'Escreva uma vogal grande em cada rolo: A (vermelho), E (azul), I (amarelo), O (verde), U (roxo)',
                'Prepare 3 tampinhas para cada vogal com as mesmas cores',
                'Misture todas as tampinhas na mesa',
                'Pe√ßa para a crian√ßa colocar cada tampinha no rolo da vogal correspondente',
                'Celebre quando todas as vogais estiverem nos lugares certos!'
              ],
              materials: [
                '5 rolos de papel higi√™nico vazios (apenas o papel√£o)',
                '15 tampas de garrafas coloridas',
                'Papel adesivo colorido (5 cores diferentes)',
                'Marcadores ou canetas permanentes',
                'Tesoura (para adultos)',
                'Mesa ou superf√≠cie plana'
              ],
              categories: ['educativo', 'alfabetiza√ß√£o', 'coordena√ß√£o', 'cognitivo'],
              duration: 20,
              participants: '1-2',
              difficulty: 'easy',
              min_age: 3,
              max_age: 6,
              rating: 4.8,
              safety_tips: [
                'Supervisione o uso da tesoura por adultos apenas',
                'Certifique-se de que as tampinhas s√£o grandes o suficiente',
                'Use materiais at√≥xicos e seguros',
                'Verifique se os rolos est√£o limpos antes de usar'
              ],
              variations: [
                'Vers√£o num√©rica: use n√∫meros 1-5 em vez de vogais',
                'Adicione desenhos que come√ßam com cada vogal',
                'Modo cron√¥metro: veja quem consegue organizar mais r√°pido',
                'Vers√£o sequencial: coloque as vogais em ordem A-E-I-O-U',
                'Adicione consoantes conforme a crian√ßa avan√ßa'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 4,
              title: 'Puzzle dos N√∫meros',
              description: 'Brincadeira educativa com pratos cortados para ensinar n√∫meros e quantidades. Desenvolve racioc√≠nio l√≥gico e compreens√£o matem√°tica',
              image_url: '/Brincadeiras/puzzledosnumeros.png',
              video_url: 'https://youtube.com/shorts/1icCY-29Qmc?feature=share',
              categories: ['educational', 'mathematical', 'indoor', 'quiet'],
              duration: 25,
              participants: '1-2',
              difficulty: 'easy',
              min_age: 3,
              max_age: 7,
              rating: 4.7,
              materials: [
                '5-10 pratos de pl√°stico descart√°veis',
                'Marcadores coloridos ou canetas permanentes',
                'Tesoura (para adultos)',
                'Adesivos redondos ou bolinhas de papel',
                'Cola (se usar bolinhas de papel)',
                'R√©gua para cortar reto',
                'Mesa ou superf√≠cie plana'
              ],
              how_to_make: [
                'Corte cada prato de pl√°stico ao meio com cuidado',
                'Em uma metade, escreva um n√∫mero grande (1, 2, 3, 4, 5...)',
                'Na outra metade correspondente, cole a quantidade exata de bolinhas/adesivos',
                'Use cores diferentes para cada par (n√∫mero 1 = azul, 2 = vermelho, etc.)',
                'Certifique-se de que as bordas se encaixem perfeitamente',
                'Prepare pelo menos 5 pares para come√ßar'
              ],
              instructions: [
                'Separe todas as metades dos pratos e misture na mesa',
                'Mostre √† crian√ßa como funciona: n√∫mero + bolinhas = prato completo',
                'Pe√ßa para contar as bolinhas em voz alta',
                'Ajude a encontrar o n√∫mero correspondente √† quantidade',
                'Encaixe as duas metades para formar o prato completo',
                'Continue at√© todos os pares estarem montados',
                'Celebre cada acerto e comemore a conquista!'
              ],
              brain_benefits: [
                'Desenvolve compreens√£o de n√∫meros e quantidades',
                'Melhora habilidades de contagem',
                'Estimula racioc√≠nio l√≥gico e associa√ß√£o',
                'Fortalece coordena√ß√£o motora fina',
                'Exercita paci√™ncia e concentra√ß√£o',
                'Prepara para matem√°tica b√°sica',
                'Desenvolve resolu√ß√£o de problemas'
              ],
              safety_tips: [
                'Adultos devem cortar os pratos para evitar bordas cortantes',
                'Verifique se n√£o h√° peda√ßos soltos que possam ser engolidos',
                'Use pratos de pl√°stico flex√≠vel, n√£o r√≠gido',
                'Supervisione crian√ßas menores durante a atividade'
              ],
              variations: [
                'Vers√£o com formas geom√©tricas em vez de bolinhas',
                'Adicione opera√ß√µes simples: 2+1=3',
                'Use diferentes texturas para cada n√∫mero',
                'Vers√£o com cores: conte objetos coloridos',
                'Modo cronometrado para crian√ßas mais velhas',
                'Vers√£o bil√≠ngue: n√∫meros em portugu√™s e ingl√™s'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 5,
              title: 'Liga Letras',
              description: 'Brincadeira com el√°sticos e tampas para conectar vogais iguais. Desenvolve coordena√ß√£o motora fina, destreza manual e reconhecimento de letras',
              image_url: '/Brincadeiras/ligaletras.png',
              video_url: 'https://youtube.com/shorts/p90n6c59z1I?feature=share',
              categories: ['educational', 'fine-motor', 'indoor', 'quiet'],
              duration: 30,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 4,
              max_age: 7,
              rating: 4.6,
              materials: [
                '1 papel√£o grande (30x40cm)',
                '10 tampas de garrafas (2 de cada vogal)',
                'Marcadores permanentes coloridos',
                '5-8 el√°sticos pequenos (coloridos)',
                'Cola forte ou cola quente',
                'R√©gua para medir dist√¢ncias',
                'Papel para marcar posi√ß√µes'
              ],
              how_to_make: [
                'Desenhe duas fileiras paralelas no papel√£o, com 15cm de dist√¢ncia',
                'Cole 5 tampas na primeira fileira: A, E, I, O, U (use cores diferentes)',
                'Cole 5 tampas na segunda fileira: A, E, I, O, U (mesmas cores)',
                'Certifique-se que as vogais iguais n√£o fiquem uma em frente da outra',
                'Embaralhe as posi√ß√µes para criar o desafio',
                'Prepare el√°sticos de cores variadas para tornar mais atrativo'
              ],
              instructions: [
                'Apresente o tabuleiro com as duas fileiras de vogais',
                'Explique que deve conectar vogais iguais com el√°sticos',
                'Demonstre como esticar o el√°stico de uma tampa √† outra',
                'Pe√ßa para encontrar duas letras "A" e conect√°-las primeiro',
                'Continue com E, I, O, U at√© todas estarem conectadas',
                'Celebre cada conex√£o correta feita pela crian√ßa',
                'Remova os el√°sticos e embaralhe para repetir o desafio'
              ],
              brain_benefits: [
                'Desenvolve coordena√ß√£o motora fina e destreza manual',
                'Melhora reconhecimento e associa√ß√£o de vogais',
                'Estimula concentra√ß√£o e foco visual',
                'Fortalece planejamento e estrat√©gia simples',
                'Exercita paci√™ncia e persist√™ncia',
                'Prepara para escrita (movimento de pin√ßa)',
                'Desenvolve percep√ß√£o espacial e direcionamento'
              ],
              safety_tips: [
                'Supervisione o uso dos el√°sticos para evitar que sejam colocados na boca',
                'Use el√°sticos grandes o suficiente para n√£o serem engolidos',
                'Certifique-se de que as tampas est√£o bem coladas',
                'Adultos devem usar cola quente se necess√°rio'
              ],
              variations: [
                'Vers√£o com n√∫meros: conecte quantidades iguais',
                'Adicione cores: conecte tampas da mesma cor',
                'Vers√£o com formas geom√©tricas',
                'Modo cronometrado para crian√ßas mais velhas',
                'Vers√£o com palavras simples: conecte palavra com imagem',
                'Adicione dificuldade: 3 fileiras em vez de 2'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 6,
              title: 'Equil√≠brio da Fita',
              description: 'Desafio de equil√≠brio onde as crian√ßas devem caminhar sobre uma fita no ch√£o carregando bolinhas em copos. Desenvolve coordena√ß√£o motora, equil√≠brio, concentra√ß√£o e foco.',
              image_url: '/Brincadeiras/equilibrionafita.png',
              video_url: 'https://youtube.com/shorts/vvoAW-aiLd4?feature=share',
              categories: ['physical', 'coordination', 'indoor', 'competition'],
              duration: 20,
              participants: '1-4',
              difficulty: 'medium',
              min_age: 4,
              max_age: 10,
              rating: 4.6,
              materials: [
                'Fita adesiva ou fita crepe (3-4 metros)',
                '1 papel√£o retangular (30x20cm por crian√ßa)',
                '2 copos pl√°sticos pequenos por crian√ßa',
                '2 bolinhas pequenas por crian√ßa (ping pong ou similar)',
                'Cola ou fita dupla face para fixar os copos',
                'Marcador para linha de chegada'
              ],
              how_to_make: [
                'Cole a fita no ch√£o formando uma linha reta de 3-4 metros',
                'Cole um copo em cada extremidade do papel√£o (bem fixado)',
                'Certifique-se que os copos est√£o nivelados',
                'Coloque uma bolinha em cada copo',
                'Marque claramente a linha de largada e chegada'
              ],
              instructions: [
                'Explique que s√≥ pode pisar em cima da fita',
                'Cada crian√ßa segura um papel√£o com 2 copos e bolinhas',
                'O objetivo √© chegar at√© o final da fita sem derrubar as bolinhas',
                'Se uma bolinha cair, a crian√ßa deve voltar ao in√≠cio',
                'Podem competir para ver quem chega primeiro',
                'Ou cada um pode tentar no seu pr√≥prio tempo'
              ],
              brain_benefits: [
                'Desenvolve equil√≠brio e coordena√ß√£o motora grossa',
                'Melhora concentra√ß√£o e foco sustentado',
                'Estimula controle corporal e propriocep√ß√£o',
                'Fortalece m√∫sculos do core e das pernas',
                'Exercita paci√™ncia e persist√™ncia',
                'Desenvolve estrat√©gias de movimento consciente',
                'Melhora coordena√ß√£o visual-motora'
              ],
              safety_tips: [
                'Certifique-se que o ch√£o n√£o est√° escorregadio',
                'Remova obst√°culos ao redor da fita',
                'Use bolinhas leves que n√£o machucam se ca√≠rem',
                'Supervisione crian√ßas menores para evitar quedas',
                'Mantenha dist√¢ncia segura entre participantes'
              ],
              variations: [
                'Vers√£o mais f√°cil: Use fita mais larga',
                'Vers√£o avan√ßada: Fa√ßa curvas na fita',
                'Modo cooperativo: Fa√ßam juntos ajudando uns aos outros',
                'Vers√£o com obst√°culos: Adicione pequenos desafios no percurso',
                'Modo relay: Passem o papel√£o de um para outro',
                'Vers√£o noturna: Use bolinhas que brilham no escuro'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 7,
              title: 'Luva das Cores',
              description: 'Atividade de classifica√ß√£o de cores usando uma luva transparente e papel√£o. Desenvolve racioc√≠nio l√≥gico, coordena√ß√£o motora fina e reconhecimento de cores.',
              image_url: '/Brincadeiras/luvadecores.png',
              video_url: 'https://www.youtube.com/shorts/1yjYBtOM3YI',
              categories: ['educational', 'fine-motor', 'indoor', 'logic'],
              duration: 25,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 3,
              max_age: 8,
              rating: 4.7,
              materials: [
                '1 luva transparente (descart√°vel ou de limpeza)',
                '1 papel√£o grande (40x30cm)',
                'Tintas ou papel colorido (5 cores diferentes)',
                'Objetos pequenos coloridos (pompons, blocos, bot√µes)',
                'Cola forte ou fita dupla face',
                'Marcadores coloridos',
                'Recipiente para organizar as pe√ßas'
              ],
              how_to_make: [
                'Cole a luva transparente no centro do papel√£o',
                'Pinte cada dedo da luva com uma cor diferente (vermelho, azul, amarelo, verde, roxo)',
                'Deixe secar completamente',
                'Prepare objetos pequenos nas mesmas 5 cores',
                'Misture todas as pe√ßas coloridas em um recipiente',
                'Desenhe as cores correspondentes embaixo de cada dedo para orienta√ß√£o'
              ],
              instructions: [
                'Mostre a luva com os dedos coloridos para a crian√ßa',
                'Explique que cada dedo tem uma cor espec√≠fica',
                'Apresente o recipiente com objetos coloridos misturados',
                'Pe√ßa para colocar objetos vermelhos no dedo vermelho',
                'Continue com todas as cores, uma de cada vez',
                'Celebre cada acerto e ajude quando necess√°rio',
                'No final, conte quantos objetos de cada cor foram colocados'
              ],
              brain_benefits: [
                'Desenvolve racioc√≠nio l√≥gico e classifica√ß√£o',
                'Melhora reconhecimento e discrimina√ß√£o de cores',
                'Estimula coordena√ß√£o motora fina e movimento de pin√ßa',
                'Fortalece concentra√ß√£o e aten√ß√£o aos detalhes',
                'Exercita planejamento e organiza√ß√£o',
                'Desenvolve contagem b√°sica e correspond√™ncia um-a-um',
                'Estimula percep√ß√£o visual e categoriza√ß√£o'
              ],
              safety_tips: [
                'Supervisione o uso de objetos pequenos para evitar engolimento',
                'Use luvas at√≥xicas e objetos seguros para crian√ßas',
                'Certifique-se que as tintas est√£o completamente secas',
                'Guarde pe√ßas pequenas fora do alcance ap√≥s a brincadeira',
                'Verifique se a crian√ßa n√£o √© al√©rgica ao material da luva'
              ],
              variations: [
                'Vers√£o com n√∫meros: cada dedo recebe uma quantidade espec√≠fica',
                'Modo cronometrado: veja quanto tempo leva para classificar tudo',
                'Vers√£o com formas: use c√≠rculos, quadrados, tri√¢ngulos',
                'Adicione texturas: objetos lisos, rugosos, macios',
                'Vers√£o cooperativa: duas crian√ßas classificam juntas',
                'Modo avan√ßado: misture cores (laranja = vermelho + amarelo)'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 8,
              title: 'Desafio da Corda Guia',
              description: 'Brincadeira onde as crian√ßas controlam um copo com bolinha atrav√©s de fitas curvas puxando uma corda. Desenvolve racioc√≠nio l√≥gico, coordena√ß√£o motora e no√ß√£o espacial.',
              image_url: '/Brincadeiras/desafiodacordaguia.png',
              video_url: 'https://youtube.com/shorts/_E5z7z2wDrU?feature=share',
              categories: ['logic', 'coordination', 'indoor', 'competition', 'strategic'],
              duration: 30,
              participants: '1-4',
              difficulty: 'hard',
              min_age: 5,
              max_age: 12,
              rating: 4.8,
              materials: [
                'Fita adesiva ou fita crepe (8-10 metros)',
                '1 copo pl√°stico pequeno por participante',
                '1 bolinha pequena por copo (ping pong ou similar)',
                'Corda ou barbante (3-4 metros por participante)',
                'Funil pequeno (para colocar a bolinha)',
                'Marcadores para pontos de largada e chegada',
                'Cron√¥metro (para competi√ß√µes)'
              ],
              how_to_make: [
                'Cole fitas no ch√£o criando um percurso com v√°rias curvas e zigue-zagues',
                'Marque claramente o ponto de largada e chegada',
                'Fa√ßa um furo pequeno na lateral do copo, pr√≥ximo ao fundo',
                'Passe a corda pelo furo e d√™ um n√≥ por dentro para fixar',
                'Coloque uma bolinha dentro de cada copo',
                'Teste o percurso para garantir que est√° desafiador mas poss√≠vel'
              ],
              instructions: [
                'Explique que o objetivo √© levar o copo da largada at√© a chegada',
                'O copo deve seguir sempre em cima da fita, sem sair dela',
                'A crian√ßa controla o copo puxando a corda em diferentes dire√ß√µes',
                'Se a bolinha cair ou o copo sair da fita, volta ao in√≠cio',
                'Pode ser individual (contra o tempo) ou competi√ß√£o entre participantes',
                'Encoraje estrat√©gia: puxar devagar nas curvas, mais r√°pido nas retas',
                'Celebre tanto a conclus√£o quanto as tentativas de melhoria'
              ],
              brain_benefits: [
                'Desenvolve racioc√≠nio l√≥gico e resolu√ß√£o de problemas',
                'Melhora coordena√ß√£o motora fina e controle de movimentos',
                'Estimula percep√ß√£o espacial e no√ß√£o de dire√ß√£o',
                'Fortalece planejamento estrat√©gico e antecipa√ß√£o',
                'Exercita paci√™ncia e controle de impulsos',
                'Desenvolve habilidades de causa e efeito',
                'Melhora concentra√ß√£o e foco sustentado'
              ],
              safety_tips: [
                'Supervisione o uso das cordas para evitar acidentes',
                'Certifique-se que o espa√ßo ao redor do percurso est√° livre',
                'Use bolinhas grandes o suficiente para n√£o serem engolidas',
                'Verifique se as fitas est√£o bem coladas para evitar escorreg√µes',
                'Mantenha dist√¢ncia segura entre participantes em competi√ß√µes'
              ],
              variations: [
                'Vers√£o mais f√°cil: Percurso mais reto com menos curvas',
                'Vers√£o avan√ßada: Adicione obst√°culos ou t√∫neis no percurso',
                'Modo cooperativo: Duas crian√ßas controlam o mesmo copo',
                'Vers√£o com obst√°culos: Coloque pequenos cones para desviar',
                'Modo relay: Passem o controle do copo entre participantes',
                'Vers√£o noturna: Use copos que brilham no escuro',
                'Desafio duplo: Cada crian√ßa controla dois copos simultaneamente'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 9,
              title: 'Pin√ßa dos Ded√µes',
              description: 'Brincadeira com tampinhas presas nos dedos para desenvolver o movimento de pin√ßa. As crian√ßas transferem feij√µes entre bandejas usando apenas os ded√µes. Desenvolve coordena√ß√£o motora fina e prepara para a escrita.',
              image_url: '/Brincadeiras/pinca.png',
              video_url: 'https://youtube.com/shorts/FFeICSqNvSI?feature=share',
              categories: ['fine-motor', 'educational', 'indoor', 'concentration'],
              duration: 20,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 3,
              max_age: 8,
              rating: 4.6,
              materials: [
                '4 tampinhas pequenas (de garrafa ou pote)',
                'Fita adesiva ou el√°sticos pequenos',
                'Feij√µes grandes ou gr√£os similares (200-300 unidades)',
                '2 bandejas ou pratos rasos',
                'Cron√¥metro (opcional)',
                'Recipiente para guardar os feij√µes',
                'Toalha ou pano para limpar'
              ],
              how_to_make: [
                'Cole ou prenda uma tampinha na ponta do polegar',
                'Cole outra tampinha na ponta do dedo indicador',
                'Repita o processo na outra m√£o',
                'Certifique-se que as tampinhas est√£o bem fixadas mas confort√°veis',
                'Coloque todos os feij√µes em uma bandeja',
                'Deixe a segunda bandeja vazia ao lado'
              ],
              instructions: [
                'Mostre como juntar o polegar e indicador para "beliscar" o feij√£o',
                'Demonstre como pegar um feij√£o da bandeja cheia',
                'Ensine a transferir cuidadosamente para a bandeja vazia',
                'Comece com poucos feij√µes e aumente gradualmente',
                'Encoraje movimentos lentos e precisos',
                'Celebre cada feij√£o transferido com sucesso',
                'Quando terminar, contem juntos quantos feij√µes foram transferidos'
              ],
              brain_benefits: [
                'Desenvolve coordena√ß√£o motora fina e movimento de pin√ßa',
                'Fortalece m√∫sculos dos dedos essenciais para a escrita',
                'Melhora concentra√ß√£o e aten√ß√£o aos detalhes',
                'Estimula controle de movimentos precisos',
                'Exercita paci√™ncia e persist√™ncia',
                'Desenvolve coordena√ß√£o olho-m√£o',
                'Prepara as m√£os para atividades de vida di√°ria'
              ],
              safety_tips: [
                'Supervisione sempre para evitar que crian√ßas pequenas engulam feij√µes',
                'Use feij√µes grandes o suficiente para n√£o representar risco',
                'Certifique-se que as tampinhas est√£o bem fixadas',
                'Pare se a crian√ßa demonstrar frustra√ß√£o excessiva',
                'Mantenha os feij√µes organizados para evitar bagun√ßa'
              ],
              variations: [
                'Vers√£o mais f√°cil: Use objetos maiores como blocos pequenos',
                'Modo cronometrado: Veja quantos feij√µes consegue em 2 minutos',
                'Vers√£o com cores: Separe feij√µes de cores diferentes',
                'Desafio de precis√£o: Use recipientes menores',
                'Modo cooperativo: Duas crian√ßas trabalham na mesma bandeja',
                'Vers√£o com contagem: Conte em voz alta cada feij√£o transferido',
                'Desafio avan√ßado: Use apenas uma m√£o por vez'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 10,
              title: 'Resgate dos Bonecos',
              description: 'Brincadeira onde bonecos s√£o "presos" em um prato com el√°sticos e a crian√ßa precisa resgat√°-los. Desenvolve racioc√≠nio l√≥gico, coordena√ß√£o motora fina e habilidades sensoriais.',
              image_url: '/Brincadeiras/boneco.png',
              video_url: 'https://youtube.com/shorts/I1XxTNt45LQ?feature=share',
              categories: ['logic', 'fine-motor', 'indoor', 'problem-solving', 'sensory'],
              duration: 25,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 4,
              max_age: 10,
              rating: 4.7,
              materials: [
                '1 prato fundo ou recipiente r√≠gido',
                '3-4 bonecos pequenos (brinquedos de pl√°stico)',
                '15-20 el√°sticos de diferentes cores e tamanhos',
                'Opcional: uma bandeja para organizar',
                'Opcional: cron√¥metro para desafios'
              ],
              how_to_make: [
                'Coloque os bonecos no centro do prato',
                'Estique os el√°sticos cruzando sobre os bonecos',
                'Varie as dire√ß√µes: alguns na horizontal, outros na vertical',
                'Alguns el√°sticos devem passar por cima de outros',
                'Certifique-se que os bonecos est√£o bem "presos" mas remov√≠veis',
                'Use el√°sticos de cores diferentes para aumentar o desafio'
              ],
              instructions: [
                'Explique que os bonecos est√£o "presos" e precisam ser resgatados',
                'Mostre como remover cuidadosamente um el√°stico por vez',
                'Ensine a observar qual el√°stico est√° segurando cada boneco',
                'Encoraje a crian√ßa a planejar antes de puxar',
                'Se um boneco cair, celebre o "resgate" bem-sucedido',
                'Deixe a crian√ßa montar o pr√≥ximo desafio',
                'Varie a complexidade conforme a idade e habilidade'
              ],
              brain_benefits: [
                'Desenvolve racioc√≠nio l√≥gico e resolu√ß√£o de problemas',
                'Melhora coordena√ß√£o motora fina e destreza manual',
                'Estimula an√°lise visual e percep√ß√£o espacial',
                'Fortalece planejamento e estrat√©gia',
                'Exercita paci√™ncia e controle de impulsos',
                'Desenvolve habilidades sensoriais e t√°teis',
                'Melhora concentra√ß√£o e foco sustentado'
              ],
              safety_tips: [
                'Supervisione sempre para evitar que el√°sticos sejam colocados na boca',
                'Use el√°sticos grandes o suficiente para n√£o representar risco de engolimento',
                'Certifique-se que os bonecos n√£o t√™m pe√ßas pequenas soltas',
                'Pare se a crian√ßa demonstrar frustra√ß√£o excessiva',
                'Verifique se os el√°sticos n√£o est√£o muito apertados'
              ],
              variations: [
                'Vers√£o mais f√°cil: Use menos el√°sticos e apenas uma cor',
                'Modo cronometrado: Resgate todos os bonecos em 3 minutos',
                'Vers√£o por cores: Remova apenas el√°sticos de uma cor espec√≠fica',
                'Desafio cooperativo: Uma crian√ßa monta, outra resgata',
                'Modo hist√≥ria: Crie narrativas sobre o resgate',
                'Vers√£o avan√ßada: Use mais bonecos e el√°sticos entrela√ßados',
                'Desafio sensorial: Fa√ßa de olhos vendados (com supervis√£o)'
              ],
              active: true,
              created_at: new Date().toISOString()
            },
            {
              id: 20,
              title: 'Encaixe das Caixas de Ovos',
              description: 'Brincadeira premium onde as crian√ßas precisam encaixar formas coloridas cortadas de caixas de ovos nas pontas correspondentes. Desenvolve racioc√≠nio l√≥gico, reconhecimento de cores, coordena√ß√£o motora fina e resolu√ß√£o de problemas.',
              instructions: [
                'Apresente a caixa de ovos com pontas coloridas para a crian√ßa',
                'Mostre as formas cortadas de cores correspondentes',
                'Explique que cada forma tem seu lugar espec√≠fico na cor correspondente',
                'Comece com uma cor de cada vez para facilitar',
                'Deixe a crian√ßa tentar encaixar livremente',
                'Ajude quando necess√°rio, mas encoraje a tentativa independente',
                'Comemore cada encaixe correto',
                'Quando dominar, misture todas as cores para maior desafio'
              ],
              materials: [
                '2 caixas de ovos (papel√£o ou pl√°stico)',
                'Tinta at√≥xica ou papel colorido (5-6 cores diferentes)',
                'Tesoura (para adulto usar)',
                'Cola n√£o t√≥xica',
                'Pinc√©is pequenos',
                'Toalha para limpeza',
                'Bandeja ou recipiente para organizar as pe√ßas'
              ],
              categories: ['educational', 'fine-motor', 'indoor', 'colors', 'logic', 'creative'],
              duration: 30,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 3,
              max_age: 8,
              rating: 4.8,
              safety_tips: [
                'Supervisione sempre para evitar que as crian√ßas coloquem pe√ßas na boca',
                'Use apenas tintas e colas at√≥xicas e seguras',
                'Verifique se as bordas cortadas est√£o lisas para evitar machucados',
                'Guarde pe√ßas pequenas fora do alcance ap√≥s a brincadeira',
                'Pare se a crian√ßa demonstrar frustra√ß√£o excessiva',
                'Certifique-se que as tintas est√£o completamente secas antes do uso'
              ],
              variations: [
                'Vers√£o mais f√°cil: Use apenas 3 cores e formas maiores',
                'Modo cronometrado: Veja quanto tempo leva para encaixar todas as pe√ßas',
                'Vers√£o com n√∫meros: Al√©m das cores, adicione n√∫meros aos encaixes',
                'Desafio cooperativo: Duas crian√ßas trabalham juntas',
                'Vers√£o com texturas: Adicione diferentes texturas √†s formas',
                'Modo avan√ßado: Crie padr√µes espec√≠ficos de encaixe',
                'Vers√£o educativa: Ensine nomes das cores em outro idioma',
                'Desafio da mem√≥ria: Mostre o padr√£o correto e depois deixe tentar de mem√≥ria'
              ],
              image_url: '/Brincadeiras/encaixedascaixasdeovos.png',
              video_url: 'https://youtube.com/shorts/Zn4Cp3PdZGw?feature=share',
              active: true,
              created_at: new Date().toISOString()
            },

            // ============================================
            // 30 BRINCADEIRAS TRADICIONAIS
            // Foco em racioc√≠nio, coordena√ß√£o motora e pensamento l√≥gico
            // ============================================

            // 1. Amarelinha Num√©rica
            {
              id: 21,
              title: 'Amarelinha Num√©rica',
              description: 'Brincadeira tradicional que combina movimento corporal com aprendizado de n√∫meros e sequ√™ncias l√≥gicas.',
              instructions: [
                'Desenhe a amarelinha tradicional numerada de 1 a 10',
                'Explique que deve pular em cada n√∫mero na ordem',
                'Use uma pedrinha para marcar a casa "proibida"',
                'Ensine a pular com um p√© s√≥ e com os dois',
                'Crie desafios: pular de costas, conte em voz alta',
                'Varie as sequ√™ncias: s√≥ n√∫meros pares, s√≥ √≠mpares'
              ],
              materials: [
                'Giz colorido ou fita adesiva',
                'Pedrinhas pequenas ou saquinhos de areia',
                'Espa√ßo plano e seguro'
              ],
              categories: ['traditional', 'physical', 'educational', 'coordination'],
              duration: 25,
              participants: '1-4',
              difficulty: 'easy',
              min_age: 3,
              max_age: 8,
              rating: 4.8,
              safety_tips: [
                'Verifique se o ch√£o n√£o tem obst√°culos',
                'Use cal√ßados adequados para n√£o escorregar',
                'Cuidado com quedas durante os pulos'
              ],
              variations: [
                'Amarelinha das letras',
                'Vers√£o com opera√ß√µes matem√°ticas',
                'Amarelinha das cores',
                'Modo cronometrado'
              ],
              image_url: '/Brincadeiras/amarelinhanumerica (1).png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 3. Torre de Han√≥i Caseira
            {
              id: 23,
              title: 'Torre de Han√≥i Caseira',
              description: 'Vers√£o simplificada do famoso quebra-cabe√ßas que desenvolve planejamento sequencial e racioc√≠nio l√≥gico.',
              instructions: [
                'Use 3 palitos ou cabos como base',
                'Prepare discos de tamanhos diferentes (latas, pratos)',
                'Explique: mover todos os discos de um palito para outro',
                'Regra: disco maior nunca fica em cima do menor',
                'Comece com apenas 3 discos',
                'Demonstre os primeiros movimentos',
                'Deixe a crian√ßa descobrir a sequ√™ncia'
              ],
              materials: [
                '3 palitos ou cabos de vassoura',
                '3-5 discos de tamanhos diferentes',
                'Base est√°vel para fixar os palitos',
                'Opcional: timer para desafios'
              ],
              categories: ['logic', 'problem-solving', 'traditional', 'sequential'],
              duration: 30,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 5,
              max_age: 10,
              rating: 4.6,
              safety_tips: [
                'Fixe bem os palitos para n√£o tombarem',
                'Use discos sem bordas cortantes',
                'Supervisione para evitar frustra√ß√£o excessiva'
              ],
              variations: [
                'Vers√£o mais f√°cil: apenas 2 discos',
                'Desafio cronometrado',
                'Torre colorida: cada disco uma cor',
                'Vers√£o gigante com pneus'
              ],
              image_url: '/Brincadeiras/torrehanoi.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 4. Ca√ßa ao Tesouro L√≥gico
            {
              id: 24,
              title: 'Ca√ßa ao Tesouro L√≥gico',
              description: 'Brincadeira tradicional com pistas que exigem racioc√≠nio l√≥gico e resolu√ß√£o de problemas sequenciais.',
              image_url: '/Brincadeiras/tesouro.png',
              instructions: [
                'Prepare 5-7 pistas que envolvam l√≥gica simples',
                'Cada pista leva √† pr√≥xima atrav√©s de dedu√ß√£o',
                'Use enigmas visuais adequados √† idade',
                'Esconda as pistas em locais seguros',
                'Acompanhe a crian√ßa nas dedu√ß√µes',
                'D√™ dicas sutis quando necess√°rio',
                'Celebre cada pista descoberta'
              ],
              materials: [
                'Papel para as pistas',
                'L√°pis coloridos',
                'Pequenos pr√™mios ou pistas',
                'Mapa simples da casa/√°rea'
              ],
              categories: ['logic', 'problem-solving', 'traditional', 'adventure'],
              duration: 40,
              participants: '1-3',
              difficulty: 'medium',
              min_age: 5,
              max_age: 12,
              rating: 4.9,
              safety_tips: [
                'Esconda pistas apenas em locais seguros',
                'Evite lugares altos ou perigosos',
                'Acompanhe sempre a crian√ßa'
              ],
              variations: [
                'Ca√ßa ao tesouro matem√°tico',
                'Vers√£o com charadas rimadas',
                'Pistas fotogr√°ficas',
                'Ca√ßa ao tesouro da natureza'
              ],
              image_url: '/Brincadeiras/tesouro.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 5. Jogo dos Palitos
            {
              id: 25,
              title: 'Jogo dos Palitos',
              description: 'Jogo tradicional de estrat√©gia que desenvolve pensamento antecipado e racioc√≠nio matem√°tico.',
              instructions: [
                'Disponha 21 palitos em fileiras ou monte',
                'Explique: cada jogador tira 1, 2 ou 3 palitos',
                'Objetivo: n√£o ser quem pega o √∫ltimo palito',
                'Comece voc√™ demonstrando estrat√©gias',
                'Deixe a crian√ßa descobrir padr√µes',
                'Discuta as jogadas depois de cada partida',
                'Varie o n√∫mero inicial de palitos'
              ],
              materials: [
                '21 palitos ou gravetos',
                'Superf√≠cie plana para organizar',
                'Opcional: papel para anotar estrat√©gias'
              ],
              categories: ['logic', 'strategic', 'traditional', 'mathematical'],
              duration: 20,
              participants: '2',
              difficulty: 'medium',
              min_age: 6,
              max_age: 12,
              rating: 4.5,
              safety_tips: [
                'Use palitos sem pontas afiadas',
                'Evite que a crian√ßa se frustre com derrotas',
                'Ensine que perder tamb√©m √© aprender'
              ],
              variations: [
                'Vers√£o com 15 palitos',
                'Jogo dos f√≥sforos (sem fogo)',
                'Varia√ß√£o: quem pega o √∫ltimo ganha',
                'Jogo em equipes'
              ],
              image_url: '/Brincadeiras/palito.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 6. Tangram Tradicional
            {
              id: 26,
              title: 'Tangram Tradicional',
              description: 'Quebra-cabe√ßas chin√™s milenar que desenvolve percep√ß√£o espacial e racioc√≠nio geom√©trico.',
              instructions: [
                'Apresente as 7 pe√ßas do tangram',
                'Mostre figuras simples para montar (casa, barco)',
                'Deixe a crian√ßa explorar livremente primeiro',
                'Proponha desafios graduais',
                'Incentive a cria√ß√£o de figuras pr√≥prias',
                'Desenhe contornos para ela preencher',
                'Celebre cada figura completada'
              ],
              materials: [
                'Conjunto de tangram (madeira ou EVA)',
                'Livro com modelos ou figuras impressas',
                'Papel para desenhar novos desafios'
              ],
              categories: ['logic', 'spatial', 'traditional', 'creative'],
              duration: 25,
              participants: '1',
              difficulty: 'medium',
              min_age: 4,
              max_age: 10,
              rating: 4.7,
              safety_tips: [
                'Use pe√ßas grandes o suficiente para n√£o engolir',
                'Verifique se n√£o h√° pontas cortantes',
                'Guarde as pe√ßas organizadas'
              ],
              variations: [
                'Tangram gigante no ch√£o',
                'Tangram magn√©tico',
                'Cria√ß√£o de hist√≥rias com as figuras',
                'Tangram em equipes'
              ],
              image_url: '/Brincadeiras/tan.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 7. Jogo da Mem√≥ria Gigante
            {
              id: 27,
              title: 'Jogo da Mem√≥ria Gigante',
              description: 'Vers√£o ampliada do cl√°ssico jogo da mem√≥ria que exercita a mem√≥ria visual e coordena√ß√£o motora.',
              instructions: [
                'Prepare cartas grandes (pelo menos 15x15cm)',
                'Use imagens simples e coloridas',
                'Disponha as cartas viradas para baixo',
                'Explique: virar duas cartas por vez',
                'Se formarem par, ficam viradas',
                'Se n√£o, viram novamente para baixo',
                'Incentive a memoriza√ß√£o das posi√ß√µes'
              ],
              materials: [
                '20-30 cartas grandes com pares',
                'Espa√ßo amplo no ch√£o',
                'Imagens atrativas para crian√ßas'
              ],
              categories: ['memory', 'traditional', 'coordination', 'visual'],
              duration: 30,
              participants: '1-4',
              difficulty: 'easy',
              min_age: 3,
              max_age: 8,
              rating: 4.8,
              safety_tips: [
                'Use cartas com bordas n√£o cortantes',
                'Certifique-se que o ch√£o est√° limpo',
                'Comece com menos pares para n√£o frustrar'
              ],
              variations: [
                'Mem√≥ria tem√°tica (animais, cores)',
                'Vers√£o com sons',
                'Mem√≥ria em movimento',
                'Modo cooperativo contra o tempo'
              ],
              image_url: '/Brincadeiras/memoria.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 8. Labirinto de Fita
            {
              id: 28,
              title: 'Labirinto de Fita',
              description: 'Cria√ß√£o de labirintos no ch√£o para desenvolver planejamento espacial e resolu√ß√£o de problemas.',
              instructions: [
                'Use fita adesiva para criar caminhos no ch√£o',
                'Fa√ßa um labirinto com entrada e sa√≠da',
                'Inclua becos sem sa√≠da para desafio',
                'Demonstre como seguir apenas as linhas',
                'Deixe a crian√ßa encontrar a sa√≠da',
                'Cronometrem as tentativas',
                'Criem novos labirintos juntos'
              ],
              materials: [
                'Fita adesiva colorida',
                'Espa√ßo amplo no ch√£o',
                'Cron√¥metro',
                'Pequenos pr√™mios para a chegada'
              ],
              categories: ['spatial', 'problem-solving', 'traditional', 'physical'],
              duration: 35,
              participants: '1-3',
              difficulty: 'easy',
              min_age: 3,
              max_age: 10,
              rating: 4.6,
              safety_tips: [
                'Certifique-se que n√£o h√° obst√°culos no caminho',
                'Use fita que n√£o danifique o ch√£o',
                'Supervisione para evitar corridas perigosas'
              ],
              variations: [
                'Labirinto com obst√°culos',
                'Vers√£o de olhos vendados (com ajuda)',
                'Labirinto tem√°tico',
                'M√∫ltiplas sa√≠das'
              ],
              image_url: '/Brincadeiras/fita.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 9. Jogo do Mico Tradicional
            {
              id: 29,
              title: 'Jogo do Mico Tradicional',
              description: 'Jogo de cartas tradicional que desenvolve estrat√©gia, mem√≥ria e coordena√ß√£o motora fina.',
              instructions: [
                'Use baralho adaptado para crian√ßas',
                'Remova uma carta para criar o "mico"',
                'Distribua todas as cartas igualmente',
                'Explique: formar pares e descartar',
                'Quem ficar com a carta sem par perde',
                'Ensine a observar as express√µes dos outros',
                'Incentive estrat√©gias simples'
              ],
              materials: [
                'Baralho infantil ou cartas grandes',
                'Mesa ou superf√≠cie plana',
                'Cadeiras para todos os jogadores'
              ],
              categories: ['strategic', 'traditional', 'social', 'fine-motor'],
              duration: 25,
              participants: '2-4',
              difficulty: 'easy',
              min_age: 4,
              max_age: 10,
              rating: 4.7,
              safety_tips: [
                'Use cartas adequadas para o tamanho das m√£os',
                'Ensine sobre ganhar e perder com esportividade',
                'Supervisione para evitar trapa√ßas'
              ],
              variations: [
                'Mico com imagens tem√°ticas',
                'Vers√£o com n√∫meros',
                'Mico cooperativo',
                'Vers√£o gigante'
              ],
              image_url: '/Brincadeiras/mico.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 10. Dan√ßa das Cadeiras Estrat√©gica
            {
              id: 30,
              title: 'Dan√ßa das Cadeiras Estrat√©gica',
              description: 'Vers√£o modificada da dan√ßa das cadeiras que adiciona elementos de estrat√©gia e pensamento r√°pido.',
              instructions: [
                'Disponha cadeiras em c√≠rculo (uma a menos que participantes)',
                'Adicione cart√µes com desafios em cada cadeira',
                'Quando a m√∫sica para, al√©m de sentar, cumprir o desafio',
                'Desafios podem ser: contar at√© 10, nomear cores, etc',
                'Quem cumprir o desafio primeiro fica na cadeira',
                'Varie os tipos de desafios a cada rodada'
              ],
              materials: [
                'Cadeiras seguras',
                'Cart√µes com desafios simples',
                'M√∫sica',
                'Espa√ßo livre para movimento'
              ],
              categories: ['strategic', 'traditional', 'physical', 'quick-thinking'],
              duration: 20,
              participants: '3-6',
              difficulty: 'easy',
              min_age: 4,
              max_age: 8,
              rating: 4.8,
              safety_tips: [
                'Use cadeiras est√°veis',
                'Evite empurr√µes na disputa',
                'Certifique-se que todos entendem as regras'
              ],
              variations: [
                'Desafios matem√°ticos',
                'Vers√£o com poses espec√≠ficas',
                'Modo cooperativo',
                'Dan√ßa das almofadas'
              ],
              image_url: '/Brincadeiras/cadeira.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 11-30: Resumo das demais atividades tradicionais
            // Para economizar espa√ßo, aqui est√° um resumo das 20 atividades restantes:

            // Sequ√™ncia de Cores, Constru√ß√£o de Torres, Jogo dos Sete Erros Vivencial,
            // Cabo de Guerra Estrat√©gico, Quebra-Cabe√ßa de Ch√£o, Jogo da Velha Tridimensional,
            // Circuito de Coordena√ß√£o, Jogo das Varetas, Detetive das Pistas, Equilibrista Maluco,
            // Mestre Mandou L√≥gico, Construtor de Padr√µes, Telefone Sem Fio Inteligente,
            // Arquiteto Mirim, C√≥digo Secreto das Cores, Est√°tuas Musicais Pensantes,
            // Organizador L√≥gico, Contador de Hist√≥rias Estruturado, Laborat√≥rio de Misturas,
            // Planejador de Rotas

            // Exemplo das pr√≥ximas 5 atividades:

            // 11. Sequ√™ncia de Cores
            {
              id: 31,
              title: 'Sequ√™ncia de Cores',
              description: 'Jogo tradicional que desenvolve mem√≥ria sequencial e coordena√ß√£o motora atrav√©s de padr√µes coloridos.',
              instructions: [
                'Use 4-6 objetos coloridos diferentes',
                'Crie uma sequ√™ncia simples (vermelho, azul, verde)',
                'Mostre a sequ√™ncia para a crian√ßa',
                'Cubra e pe√ßa para repetir',
                'Aumente gradualmente a complexidade',
                'Inclua ritmo batendo palmas',
                'Celebre cada sequ√™ncia correta'
              ],
              materials: ['Objetos coloridos (blocos, brinquedos)', 'Pano para cobrir', 'Espa√ßo organizado'],
              categories: ['memory', 'sequential', 'traditional', 'coordination'],
              duration: 20,
              participants: '1-2',
              difficulty: 'easy',
              min_age: 3,
              max_age: 7,
              rating: 4.6,
              safety_tips: ['Use objetos grandes o suficiente para n√£o engolir', 'Comece com sequ√™ncias curtas'],
              variations: ['Sequ√™ncia com sons', 'Vers√£o com movimentos corporais', 'Sequ√™ncia musical'],
              image_url: '/Brincadeiras/cores.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 12. Constru√ß√£o de Torres
            {
              id: 32,
              title: 'Constru√ß√£o de Torres',
              description: 'Brincadeira tradicional que desenvolve coordena√ß√£o motora fina, planejamento e no√ß√£o espacial.',
              instructions: [
                'Re√∫na blocos, latas ou caixas de tamanhos variados',
                'Desafie a construir a torre mais alta poss√≠vel',
                'Ensine sobre equil√≠brio e base est√°vel',
                'Incentive planejamento antes de construir',
                'Crie competi√ß√µes amig√°veis',
                'Fotografe as cria√ß√µes',
                'Discuta por que algumas torres caem'
              ],
              materials: ['Blocos de madeira ou latas vazias', 'Superf√≠cie est√°vel', 'R√©gua para medir'],
              categories: ['engineering', 'traditional', 'fine-motor', 'spatial'],
              duration: 30,
              participants: '1-3',
              difficulty: 'easy',
              min_age: 2,
              max_age: 8,
              rating: 4.7,
              safety_tips: ['Use materiais sem pontas cortantes', 'Supervisione para evitar quedas'],
              variations: ['Torres tem√°ticas', 'Constru√ß√£o em equipe', 'Torres com pontes'],
              image_url: '/Brincadeiras/lata.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 13. Jogo dos Sete Erros Vivencial
            {
              id: 33,
              title: 'Jogo dos Sete Erros Vivencial',
              description: 'Vers√£o f√≠sica do cl√°ssico jogo que desenvolve aten√ß√£o aos detalhes e mem√≥ria visual.',
              instructions: [
                'Organize um ambiente com v√°rios objetos',
                'Deixe a crian√ßa observar por 1 minuto',
                'Pe√ßa para ela fechar os olhos',
                'Mude 3-5 objetos de lugar ou retire alguns',
                'Pe√ßa para encontrar as diferen√ßas',
                'Comece com poucas mudan√ßas',
                'Aumente gradualmente a dificuldade'
              ],
              materials: ['V√°rios objetos pequenos', 'Mesa organizada', 'Cron√¥metro'],
              categories: ['observation', 'memory', 'traditional', 'detail-oriented'],
              duration: 25,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 4,
              max_age: 10,
              rating: 4.8,
              safety_tips: ['Use apenas objetos seguros', 'Comece simples para n√£o frustrar'],
              variations: ['Vers√£o com pessoas', 'Jogo fotogr√°fico', 'Erros tem√°ticos'],
              image_url: '/Brincadeiras/7.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 14. Quebra-Cabe√ßa de Ch√£o
            {
              id: 34,
              title: 'Quebra-Cabe√ßa de Ch√£o',
              description: 'Quebra-cabe√ßas grandes que podem ser montados no ch√£o, desenvolvendo l√≥gica espacial e persist√™ncia.',
              instructions: [
                'Use quebra-cabe√ßas grandes apropriados para a idade',
                'Prepare uma √°rea limpa no ch√£o',
                'Comece separando as bordas',
                'Ensine a agrupar por cores ou padr√µes',
                'Incentive tentativas mesmo que erradas',
                'Trabalhem juntos na solu√ß√£o',
                'Comemore a conclus√£o com foto'
              ],
              materials: ['Quebra-cabe√ßas grandes (50-200 pe√ßas)', 'Tapete', 'Boa ilumina√ß√£o'],
              categories: ['logic', 'traditional', 'spatial', 'persistence'],
              duration: 45,
              participants: '1-2',
              difficulty: 'medium',
              min_age: 4,
              max_age: 12,
              rating: 4.6,
              safety_tips: ['Use pe√ßas adequadas √† idade', 'Mantenha organizadas'],
              variations: ['Quebra-cabe√ßa gigante', 'Vers√£o 3D', 'Cria√ß√£o pr√≥pria'],
              image_url: '/Brincadeiras/quebra.png',
              active: true,
              created_at: new Date().toISOString()
            },

            // 15. Jogo das Varetas
            {
              id: 35,
              title: 'Jogo das Varetas',
              description: 'Jogo tradicional que desenvolve coordena√ß√£o motora fina, concentra√ß√£o e controle de movimentos.',
              instructions: [
                'Use varetas coloridas ou palitos de churrasco',
                'Segure todas juntas e solte formando uma pilha',
                'Objetivo: retirar varetas sem mover as outras',
                'Comece com a vareta de cima',
                'Se mover outras varetas, perde a vez',
                'Conte pontos por cores',
                'Ensine paci√™ncia e movimentos precisos'
              ],
              materials: ['Conjunto de varetas coloridas', 'Superf√≠cie lisa', 'Papel para pontos'],
              categories: ['fine-motor', 'traditional', 'concentration', 'precision'],
              duration: 25,
              participants: '2-4',
              difficulty: 'medium',
              min_age: 5,
              max_age: 12,
              rating: 4.7,
              safety_tips: ['Use varetas sem pontas afiadas', 'Ensine sobre paci√™ncia'],
              variations: ['Varetas gigantes', 'Vers√£o com im√£s', 'Jogo cooperativo'],
              image_url: '/Brincadeiras/vareta.png',
              active: true,
              created_at: new Date().toISOString()
            }
          ]
          
          // Log para debug - VERIFICA√á√ÉO COMPLETA
          console.log('üéØ CARREGANDO ATIVIDADES:', demoActivities.length)
          console.log('üé¨ ATIVIDADES PREMIUM:', demoActivities.filter(a => a.video_url).length)
          console.log('üìö ATIVIDADES TRADICIONAIS:', demoActivities.filter(a => !a.video_url).length)
          console.log('‚úÖ NOVA ATIVIDADE PREMIUM: Encaixe das Caixas de Ovos')
          console.log('üéÆ NOVAS ATIVIDADES TRADICIONAIS: 15 brincadeiras cl√°ssicas adicionadas')
          console.log('üß† FOCO: Racioc√≠nio l√≥gico, coordena√ß√£o motora e pensamento estrat√©gico')
          console.log('üé® TODAS COM IMAGENS: URLs do Unsplash para visualiza√ß√£o')
          console.log('üì∫ DESENHOS ATUALIZADOS: Bluey, Caillou, Comic, Puffin Rock, Daniel Tigre, Show da Luna, Detetive Labrador, Di√°rio de Mika')
          
          const ligaLetras = demoActivities.find(a => a.title === 'Liga Letras')
          if (ligaLetras) {
            console.log('üîó LIGA LETRAS CRIADA:', {
              id: ligaLetras.id,
              title: ligaLetras.title,
              duration: ligaLetras.duration,
              min_age: ligaLetras.min_age,
              categories: ligaLetras.categories
            })
          }
          
          const equilibrioFita = demoActivities.find(a => a.title === 'Equil√≠brio da Fita')
          if (equilibrioFita) {
            console.log('‚öñÔ∏è EQUIL√çBRIO DA FITA CRIADA:', {
              id: equilibrioFita.id,
              title: equilibrioFita.title,
              duration: equilibrioFita.duration,
              min_age: equilibrioFita.min_age,
              categories: equilibrioFita.categories,
              video_url: equilibrioFita.video_url
            })
          }
          
          const luvaCores = demoActivities.find(a => a.title === 'Luva das Cores')
          if (luvaCores) {
            console.log('üß§ LUVA DAS CORES CRIADA:', {
              id: luvaCores.id,
              title: luvaCores.title,
              duration: luvaCores.duration,
              min_age: luvaCores.min_age,
              categories: luvaCores.categories,
              video_url: luvaCores.video_url
            })
          }
          
          const cordaGuia = demoActivities.find(a => a.title === 'Desafio da Corda Guia')
          if (cordaGuia) {
            console.log('üéØ DESAFIO DA CORDA GUIA CRIADA:', {
              id: cordaGuia.id,
              title: cordaGuia.title,
              duration: cordaGuia.duration,
              min_age: cordaGuia.min_age,
              categories: cordaGuia.categories,
              difficulty: cordaGuia.difficulty,
              video_url: cordaGuia.video_url
            })
          }
          
          const pincaDedoes = demoActivities.find(a => a.title === 'Pin√ßa dos Ded√µes')
          if (pincaDedoes) {
            console.log('ü§è PIN√áA DOS DED√ïES CRIADA:', {
              id: pincaDedoes.id,
              title: pincaDedoes.title,
              duration: pincaDedoes.duration,
              min_age: pincaDedoes.min_age,
              categories: pincaDedoes.categories,
              difficulty: pincaDedoes.difficulty,
              video_url: pincaDedoes.video_url
            })
          }
          
          const resgateBonecos = demoActivities.find(a => a.title === 'Resgate dos Bonecos')
          if (resgateBonecos) {
            console.log('üé≠ RESGATE DOS BONECOS CRIADA:', {
              id: resgateBonecos.id,
              title: resgateBonecos.title,
              duration: resgateBonecos.duration,
              min_age: resgateBonecos.min_age,
              categories: resgateBonecos.categories,
              difficulty: resgateBonecos.difficulty,
              video_url: resgateBonecos.video_url,
              image_url: resgateBonecos.image_url
            })
          }
          
          
          const cacaTesouro = demoActivities.find(a => a.title === 'Ca√ßa ao Tesouro L√≥gico')
          if (cacaTesouro) {
            console.log('üè¥‚Äç‚ò†Ô∏è CA√áA AO TESOURO L√ìGICO CRIADA:', {
              id: cacaTesouro.id,
              title: cacaTesouro.title,
              duration: cacaTesouro.duration,
              min_age: cacaTesouro.min_age,
              categories: cacaTesouro.categories,
              difficulty: cacaTesouro.difficulty,
              video_url: cacaTesouro.video_url,
              image_url: cacaTesouro.image_url
            })
          }
          
          // Atualiza√ß√£o completa
          set({ 
            activities: demoActivities,
            cachedData: { 
              activities: demoActivities,
              lastUpdated: new Date().toISOString()
            }
          })
          
          // DEBUG: Log todas as atividades com imagens
          console.log('üñºÔ∏è ATIVIDADES COM IMAGENS:', demoActivities
            .filter(a => a.image_url || a.image)
            .map(a => ({ title: a.title, image_url: a.image_url, image: a.image }))
          )
          
          return { data: demoActivities, error: null }
        }
        
        try {
          const { data, error } = await supabase
            .from('activities')
            .select('*')
            .eq('active', true)
            .order('created_at', { ascending: false })
          
          if (error) throw error
          
          set({ activities: data })
          
          // Atualizar cache offline
          set({ 
            cachedData: { 
              ...get().cachedData, 
              activities: data,
              lastUpdated: new Date().toISOString()
            }
          })
          
          return { data, error: null }
        } catch (error) {
          console.error('Erro ao carregar brincadeiras:', error)
          // Em caso de erro, usar dados do cache
          const cachedActivities = get().cachedData.activities
          if (cachedActivities.length > 0) {
            set({ activities: cachedActivities })
          }
          return { data: null, error }
        }
      },

      // Actions de desenhos
      setCartoons: (cartoons) => set({ cartoons }),
      
      loadCartoons: async () => {
        if (!supabase) {
          // Dados de demonstra√ß√£o para os 8 desenhos especificados
          const demoCartoons = [
            {
              id: 1,
              title: 'Bluey',
              description: 'Aventuras da cachorrinha Bluey e sua fam√≠lia que ensinam sobre criatividade, amizade, resolu√ß√£o de problemas e vida familiar. Cada epis√≥dio traz li√ß√µes valiosas sobre relacionamentos e desenvolvimento emocional.',
              category: 'educational',
              min_age: 2,
              max_age: 7,
              duration: 22,
              rating: 4.9,
              image: '/desenhos/bluey/blueycapa.jpeg',
              thumbnail_url: '/desenhos/bluey/blueycapa.jpeg',
              gallery: [
                '/desenhos/bluey/blueycapa.jpeg',
                '/desenhos/bluey/bluey1.jpeg',
                '/desenhos/bluey/bluey2.jpeg',
                '/desenhos/bluey/bluey3.jpeg',
                '/desenhos/bluey/bluey4.jpeg',
                '/desenhos/bluey/bluey5.jpeg',
                '/desenhos/bluey/bluey6.jpeg'
              ],
              video_url: 'https://youtu.be/4-W8mS24aGc?si=uqpBq2Ld1F79J9s7',
              watch_platforms: [
                {
                  name: 'YouTube',
                  url: 'https://youtu.be/4-W8mS24aGc?si=uqpBq2Ld1F79J9s7',
                  type: 'free',
                  icon: '‚ñ∂Ô∏è',
                  description: 'Epis√≥dios gratuitos no YouTube'
                },
                {
                  name: 'TV Cultura',
                  type: 'tv',
                  icon: 'üì∫',
                  description: 'Canal aberto - hor√°rios variados'
                },
                {
                  name: 'Disney+',
                  type: 'streaming',
                  icon: 'üè∞',
                  description: 'Todos os epis√≥dios dispon√≠veis'
                },
                {
                  name: 'Amazon Prime Video',
                  type: 'streaming',
                  icon: 'üì¶',
                  description: 'Temporadas completas'
                }
              ]
            },
            {
              id: 2,
              title: 'Caillou',
              description: 'Hist√≥rias do garotinho de 4 anos que explora o mundo ao seu redor. Ensina sobre curiosidade, aprendizado, fam√≠lia e como lidar com diferentes situa√ß√µes do dia a dia.',
              category: 'educational',
              min_age: 2,
              max_age: 6,
              duration: 25,
              rating: 4.7,
              image: '/desenhos/caillou/fotodecapa.jpeg',
              thumbnail_url: '/desenhos/caillou/fotodecapa.jpeg',
              gallery: [
                '/desenhos/caillou/fotodecapa.jpeg',
                '/desenhos/caillou/caillou1.jpeg',
                '/desenhos/caillou/caillou2.jpeg',
                '/desenhos/caillou/caillou3.jpeg',
                '/desenhos/caillou/caillou4.jpeg'
              ],
              video_url: 'https://youtu.be/W8nBWjLzOuM?si=4jFAEkZ73Mq5lGoZ',
              watch_platforms: [
                {
                  name: 'YouTube',
                  url: 'https://youtu.be/W8nBWjLzOuM?si=4jFAEkZ73Mq5lGoZ',
                  type: 'free',
                  icon: '‚ñ∂Ô∏è',
                  description: 'Epis√≥dios gratuitos no YouTube'
                },
                {
                  name: 'TV Cultura',
                  type: 'tv',
                  icon: 'üì∫',
                  description: 'Canal aberto - manh√£s e tardes'
                },
                {
                  name: 'Pluto TV',
                  type: 'free',
                  icon: 'üÜì',
                  description: 'Canal 24h gratuito'
                },
                {
                  name: 'Paramount+',
                  type: 'streaming',
                  icon: '‚≠ê',
                  description: 'Todas as temporadas'
                }
              ]
            },
            {
              id: 3,
              title: 'Puffin Rock',
              description: 'Aventuras suaves e educativas na ilha de Puffin Rock, onde as crian√ßas aprendem sobre natureza, animais e o mundo ao seu redor de forma gentil e relaxante.',
              category: 'educational',
              min_age: 2,
              max_age: 6,
              duration: 15,
              rating: 4.6,
              image: '/desenhos/puffin/imagemdecapa.jpeg',
              thumbnail_url: '/desenhos/puffin/imagemdecapa.jpeg',
              gallery: [
                '/desenhos/puffin/imagemdecapa.jpeg',
                '/desenhos/puffin/puffin1.jpeg',
                '/desenhos/puffin/puffin2.jpeg',
                '/desenhos/puffin/puffin3.jpeg',
                '/desenhos/puffin/puffin4.jpeg',
                '/desenhos/puffin/puffin5.jpeg'
              ],
              video_url: 'https://youtu.be/IY-CN54eASg?si=2Ia7DFl3mzGCTmJz',
              watch_platforms: [
                {
                  name: 'YouTube',
                  url: 'https://youtu.be/IY-CN54eASg?si=2Ia7DFl3mzGCTmJz',
                  type: 'free',
                  icon: '‚ñ∂Ô∏è',
                  description: 'Epis√≥dios gratuitos no YouTube'
                },
                {
                  name: 'Netflix Kids',
                  type: 'streaming',
                  icon: 'üé¨',
                  description: 'S√©rie completa dispon√≠vel'
                },
                {
                  name: 'RTE Player',
                  type: 'free',
                  icon: 'üì∫',
                  description: 'Canal oficial irland√™s'
                },
                {
                  name: 'Amazon Prime Video',
                  type: 'streaming',
                  icon: 'üì¶',
                  description: 'Temporadas dispon√≠veis'
                }
              ]
            },
            {
              id: 4,
              title: 'Daniel Tigre',
              description: 'S√©rie que ensina sobre emo√ß√µes, desenvolvimento social e habilidades de vida. Daniel aprende a lidar com diferentes sentimentos e situa√ß√µes com a ajuda de sua fam√≠lia e amigos.',
              category: 'educational',
              min_age: 2,
              max_age: 5,
              duration: 25,
              rating: 4.8,
              image: '/desenhos/Daniel tigre/imagemdecapa.jpeg',
              thumbnail_url: '/desenhos/Daniel tigre/imagemdecapa.jpeg',
              gallery: [
                '/desenhos/Daniel tigre/imagemdecapa.jpeg',
                '/desenhos/Daniel tigre/daniel1.jpeg',
                '/desenhos/Daniel tigre/daniel2.jpeg',
                '/desenhos/Daniel tigre/daniel3.jpeg',
                '/desenhos/Daniel tigre/daniel4.jpeg'
              ],
              video_url: 'https://youtu.be/dW6lfOV5vis?si=bh4y0luJ3RmdBoX9',
              watch_platforms: [
                {
                  name: 'YouTube',
                  url: 'https://youtu.be/dW6lfOV5vis?si=bh4y0luJ3RmdBoX9',
                  type: 'free',
                  icon: '‚ñ∂Ô∏è',
                  description: 'Epis√≥dios gratuitos no YouTube'
                },
                {
                  name: 'PBS Kids',
                  type: 'free',
                  icon: 'üìö',
                  description: 'Canal oficial PBS Kids'
                },
                {
                  name: 'Amazon Prime Video',
                  type: 'streaming',
                  icon: 'üì¶',
                  description: 'Temporadas completas'
                },
                {
                  name: 'Paramount+',
                  type: 'streaming',
                  icon: '‚≠ê',
                  description: 'Biblioteca completa'
                }
              ]
            },
            {
              id: 5,
              title: 'Show da Luna',
              description: 'Aventuras da menina Luna que explora o mundo da ci√™ncia de forma divertida e acess√≠vel. Ensina conceitos cient√≠ficos b√°sicos atrav√©s de experi√™ncias e descobertas.',
              category: 'educational',
              min_age: 3,
              max_age: 8,
              duration: 30,
              rating: 4.7,
              image: '/desenhos/luna/imagemdecapa.jpeg',
              thumbnail_url: '/desenhos/luna/imagemdecapa.jpeg',
              gallery: [
                '/desenhos/luna/imagemdecapa.jpeg',
                '/desenhos/luna/luna1.jpeg',
                '/desenhos/luna/luna2.jpeg',
                '/desenhos/luna/luna3.jpeg',
                '/desenhos/luna/luna4.jpeg',
                '/desenhos/luna/luna5.jpeg'
              ],
              video_url: 'https://youtu.be/QIoK32NhaPw?si=6JyauOz-II1wIOPb',
              watch_platforms: [
                {
                  name: 'YouTube',
                  url: 'https://youtu.be/QIoK32NhaPw?si=6JyauOz-II1wIOPb',
                  type: 'free',
                  icon: '‚ñ∂Ô∏è',
                  description: 'Epis√≥dios gratuitos no YouTube'
                },
                {
                  name: 'TV Cultura',
                  type: 'tv',
                  icon: 'üì∫',
                  description: 'Canal brasileiro - programa√ß√£o infantil'
                },
                {
                  name: 'Discovery Kids',
                  type: 'tv',
                  icon: 'üî¨',
                  description: 'Canal especializado em educa√ß√£o'
                },
                {
                  name: 'Globo Play',
                  type: 'streaming',
                  icon: 'üåê',
                  description: 'Temporadas dispon√≠veis'
                }
              ]
            },
            {
              id: 6,
              title: 'Di√°rio da Mika',
              description: 'Hist√≥rias da menina Mika que compartilha suas experi√™ncias, sonhos e aventuras atrav√©s de seu di√°rio. Ensina sobre express√£o criativa, autoconhecimento e desenvolvimento pessoal.',
              category: 'creative',
              min_age: 3,
              max_age: 7,
              duration: 20,
              rating: 4.5,
              image: '/desenhos/diario da mika/mika-capa.jpeg',
              thumbnail_url: '/desenhos/diario da mika/mika-capa.jpeg',
              gallery: [
                '/desenhos/diario da mika/mika-capa.jpeg',
                '/desenhos/diario da mika/o-di√°rio-de-mika-.jpg',
                '/desenhos/diario da mika/mika-diary-banner.jpg',
                '/desenhos/diario da mika/20210902155644_capa-de-nota-5-.png',
                '/desenhos/diario da mika/Promo-Mika_2_01482-e1439248916561.png',
                '/desenhos/diario da mika/partner-background-original.jpg',
                '/desenhos/diario da mika/63f70940aeac40722905dc362090ebb3b103c4fdb5693b478e74ab628ff74be5._SX1080_FMjpg_.jpg'
              ],
              video_url: 'https://youtu.be/0QyBh0J3aAU?si=8LxcqeNRgaMDue_P',
              watch_platforms: [
                {
                  name: 'YouTube',
                  url: 'https://youtu.be/0QyBh0J3aAU?si=8LxcqeNRgaMDue_P',
                  type: 'free',
                  icon: '‚ñ∂Ô∏è',
                  description: 'Epis√≥dios gratuitos no YouTube'
                },
                {
                  name: 'TV Cultura',
                  type: 'tv',
                  icon: 'üì∫',
                  description: 'Canal aberto - programa√ß√£o infantil'
                },
                {
                  name: 'Globo Play',
                  type: 'streaming',
                  icon: 'üåê',
                  description: 'Temporadas dispon√≠veis'
                },
                {
                  name: 'Amazon Prime Video',
                  type: 'streaming',
                  icon: 'üì¶',
                  description: 'Conte√∫do infantil'
                }
              ]
            }
          ]
          
          set({ cartoons: demoCartoons })
          set({ 
            cachedData: { 
              ...get().cachedData, 
              cartoons: demoCartoons,
              lastUpdated: new Date().toISOString()
            }
          })
          
          return { data: demoCartoons, error: null }
        }
        
        try {
          const { data, error } = await supabase
            .from('cartoons')
            .select('*')
            .eq('active', true)
            .order('title', { ascending: true })
          
          if (error) throw error
          
          set({ cartoons: data })
          
          // Atualizar cache offline
          set({ 
            cachedData: { 
              ...get().cachedData, 
              cartoons: data,
              lastUpdated: new Date().toISOString()
            }
          })
          
          return { data, error: null }
        } catch (error) {
          console.error('Erro ao carregar desenhos:', error)
          const cachedCartoons = get().cachedData.cartoons
          if (cachedCartoons.length > 0) {
            set({ cartoons: cachedCartoons })
          }
          return { data: null, error }
        }
      },

      // Actions de favoritos
      setFavorites: (favorites) => set({ favorites }),
      
      loadFavorites: async () => {
        const { user } = get()
        if (!user) return { error: 'Usu√°rio n√£o autenticado' }
        
        try {
          const { data, error } = await supabase
            .from('user_favorites')
            .select(`
              *,
              activities (*),
              cartoons (*)
            `)
            .eq('user_id', user.id)
          
          if (error) throw error
          
          set({ favorites: data })
          return { data, error: null }
        } catch (error) {
          console.error('Erro ao carregar favoritos:', error)
          return { data: null, error }
        }
      },
      
      addToFavorites: async (type, itemId) => {
        const { user } = get()
        if (!user) return { error: 'Usu√°rio n√£o autenticado' }
        
        try {
          const { data, error } = await supabase
            .from('user_favorites')
            .insert({
              user_id: user.id,
              type: type, // 'activity' ou 'cartoon'
              activity_id: type === 'activity' ? itemId : null,
              cartoon_id: type === 'cartoon' ? itemId : null
            })
            .select()
            .single()
          
          if (error) throw error
          
          // Recarregar favoritos
          get().loadFavorites()
          return { data, error: null }
        } catch (error) {
          console.error('Erro ao adicionar favorito:', error)
          return { data: null, error }
        }
      },
      
      removeFromFavorites: async (type, itemId) => {
        const { user } = get()
        if (!user) return { error: 'Usu√°rio n√£o autenticado' }
        
        try {
          const query = supabase
            .from('user_favorites')
            .delete()
            .eq('user_id', user.id)
            .eq('type', type)
          
          if (type === 'activity') {
            query.eq('activity_id', itemId)
          } else {
            query.eq('cartoon_id', itemId)
          }
          
          const { error } = await query
          if (error) throw error
          
          // Recarregar favoritos
          get().loadFavorites()
          return { error: null }
        } catch (error) {
          console.error('Erro ao remover favorito:', error)
          return { error }
        }
      },

      // Fun√ß√£o utilit√°ria para verificar se item est√° favoritado
      isFavorite: (type, itemId) => {
        const { favorites } = get()
        return favorites.some(fav => 
          fav.type === type && 
          (type === 'activity' ? fav.activity_id === itemId : fav.cartoon_id === itemId)
        )
      },

      // Inicializar dados da aplica√ß√£o
      initializeApp: async () => {
        console.log('üöÄ INICIALIZANDO APLICATIVO...')
        console.log('üë§ USU√ÅRIO ATUAL:', get().user)
        console.log('üîê AUTENTICADO:', get().isAuthenticated)
        set({ isLoading: true })
        
        try {
          console.log('üìä CARREGANDO DADOS PRINCIPAIS...')
          // Carregar dados principais
          await Promise.all([
            get().loadActivities(),
            get().loadCartoons()
          ])
          
          console.log('üë∂ CARREGANDO DADOS DE DESENVOLVIMENTO...')
          // Carregar dados de desenvolvimento da crian√ßa
          get().loadChildDevelopment()
          
          // Se usu√°rio autenticado, carregar dados pessoais
          const { user } = get()
          if (user) {
            console.log('üë§ CARREGANDO DADOS PESSOAIS...')
            await Promise.all([
              get().loadFavorites(),
              get().loadChildProfile()
            ])
          }
          
          // Verificar se precisa resetar dados semanais
          const current = get().childDevelopment
          if (current.lastUpdated) {
            const lastUpdate = new Date(current.lastUpdated)
            const now = new Date()
            const daysDiff = Math.floor((now - lastUpdate) / (1000 * 60 * 60 * 24))
            
            if (daysDiff >= 7) {
              get().resetWeeklyData()
            }
          }
        } catch (error) {
          console.error('‚ùå ERRO AO INICIALIZAR APP:', error)
        } finally {
          console.log('‚úÖ INICIALIZA√á√ÉO CONCLU√çDA')
          set({ isLoading: false })
        }
      },

      // Carregar perfil da crian√ßa
      loadChildProfile: async () => {
        const { user } = get()
        if (!user) return { error: 'Usu√°rio n√£o autenticado' }
        
        try {
          const { data, error } = await supabase
            .from('children_profiles')
            .select('*')
            .eq('user_id', user.id)
            .single()
          
          if (error && error.code !== 'PGRST116') {
            throw error
          }
          
          set({ child: data })
          return { data, error: null }
        } catch (error) {
          console.error('Erro ao carregar perfil da crian√ßa:', error)
          return { data: null, error }
        }
      }
    }),
    {
      name: 'brincafacil-store',
      partialize: (state) => ({
        cachedData: state.cachedData,
        child: state.child
      })
    }
  )
)

export default useAppStore
